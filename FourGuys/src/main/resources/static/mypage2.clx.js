/*
 * App URI: mypage2
 * Source Location: mypage2.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("mypage2", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * mypage.js
			 * Created at 2023. 8. 4. 오전 9:40:38.
			 *
			 * @author USER
			 ************************************************/
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				var findMyPage = app.lookup("findMyPage");
				findMyPage.send();
			}

			/*
			 * "수정하기" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				var btn2 = e.control;
				var submission = app.lookup("updateMember");
				submission.send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onFindMyPageSubmitSuccess(e){
				var findMyPage = e.control;
				var meta = findMyPage.getMetadata("findMyPageis");
				if(meta != null){
					var ID = app.lookup("ID");
					var passwd = app.lookup("PASSWORD");
					var ADDR = app.lookup("ADDR");
					var BIRTH = app.lookup("BIRTH");
					var NAME = app.lookup("NAME");
					var EMAIL = app.lookup("EMAIL");
					var PHONE = app.lookup("PHONE");
					ID.value=meta["id"];
					passwd.value=meta["password"];
					ADDR.value=meta["address"];
					BIRTH.value=meta["birth"];
					EMAIL.value=meta["email"];
					PHONE.value=meta["phone"];
					NAME.value=meta["name"];
				}else{
					location.href="";
				}
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onUpdateMemberSubmitSuccess(e){
				var updateMember = e.control;
				alert("수정되었습니다.");
				location.href="";
			}

			/*
			 * 서브미션에서 submit-error 이벤트 발생 시 호출.
			 * 통신 중 문제가 생기면 발생합니다.
			 */
			function onUpdateMemberSubmitError(e){
				var updateMember = e.control;
				var msg = updateMember.getMetadata("message");
				if (msg != null) {
					alert(msg);
				}
			}

			/*
			 * "계정 탈퇴" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function ondeleteBtnClick(e){
				var deleteBtn = e.control;
				var intro = "탈퇴 하시겠습니까?"
				var initValue = {
					"msg": intro
				}
				app.openDialog("deleteMember", {
					width: 450,
					height: 300
				}, function(dialog) {
					dialog.ready(function(dialogApp) {
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
						dialogApp.initValue = initValue;
					});
				}).then(function(returnValue) {
					alert(JSON.stringify(returnValue));
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "PLANNER_NO",
						"dataType": "number"
					},
					{"name": "ID"},
					{
						"name": "PLANNER_TITLE",
						"dataType": "string"
					},
					{
						"name": "PLANNER_START_DATE",
						"dataType": "string"
					},
					{
						"name": "PLANNER_LAST_DATE",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmDetail");
			dataMap_1.parseData({
				"columns" : [
					{"name": "PLAN_TITLE"},
					{"name": "PLAN_START"},
					{"name": "PLAN_LAST"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("member");
			dataMap_2.parseData({
				"alterColumnLayout": "client",
				"columns": [
					{"name": "id"},
					{"name": "password"},
					{
						"name": "name",
						"dataType": "string"
					},
					{"name": "email"},
					{"name": "birth"},
					{"name": "phone"},
					{"name": "address"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("findMyPage");
			submission_1.method = "get";
			submission_1.action = "findMyPage";
			submission_1.addResponseData(dataMap_2, false);
			if(typeof onFindMyPageSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onFindMyPageSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("updateMember");
			submission_2.method = "put";
			submission_2.action = "/updateMember";
			submission_2.addRequestData(dataMap_2);
			if(typeof onUpdateMemberSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onUpdateMemberSubmitSuccess);
			}
			if(typeof onUpdateMemberSubmitError == "function") {
				submission_2.addEventListener("submit-error", onUpdateMemberSubmitError);
			}
			app.register(submission_2);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp1");
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			group_1.setLayout(responsiveXYLayout_1);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("MyPages");
				tabFolder_1.tabIndex = 3;
				var group_2 = new cpr.controls.Container("grp4");
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_2);
				tabFolder_1.addHeaderControl(group_2, {"position": "heading", "width": 498});
				var group_3 = new cpr.controls.Container("grp11");
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_3);
				tabFolder_1.addHeaderControl(group_3, {"position": "inner-left"});
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "MYPAGE";
					tabItem_1.name = "MYPAGE";
					tabItem_1.tooltip = "회원수정을 위한 탭입니다.";
					var group_4 = new cpr.controls.Container("grp2");
					var xYLayout_4 = new cpr.controls.layouts.XYLayout();
					group_4.setLayout(xYLayout_4);
					(function(container){
						var group_5 = new cpr.controls.Container("grp5");
						var formLayout_1 = new cpr.controls.layouts.FormLayout();
						formLayout_1.scrollable = false;
						formLayout_1.topMargin = "0px";
						formLayout_1.rightMargin = "0px";
						formLayout_1.bottomMargin = "0px";
						formLayout_1.leftMargin = "0px";
						formLayout_1.horizontalSpacing = "5px";
						formLayout_1.verticalSpacing = "5px";
						formLayout_1.setColumns(["1fr", "100px", "200px", "100px", "1fr"]);
						formLayout_1.setRows(["1fr", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "50px", "40px", "50px", "40px", "1fr"]);
						group_5.setLayout(formLayout_1);
						(function(container){
							var output_1 = new cpr.controls.Output();
							output_1.value = "ID";
							output_1.style.css({
								"text-align" : "center"
							});
							container.addChild(output_1, {
								"colIndex": 1,
								"rowIndex": 1,
								"horizontalAlign": "center"
							});
							var output_2 = new cpr.controls.Output();
							output_2.value = "PASSWORD";
							output_2.style.css({
								"text-align" : "center"
							});
							container.addChild(output_2, {
								"colIndex": 1,
								"rowIndex": 2,
								"horizontalAlign": "center"
							});
							var output_3 = new cpr.controls.Output();
							output_3.value = "주소";
							output_3.style.css({
								"text-align" : "center"
							});
							container.addChild(output_3, {
								"colIndex": 1,
								"rowIndex": 3,
								"horizontalAlign": "center"
							});
							var output_4 = new cpr.controls.Output();
							output_4.value = "이름";
							output_4.style.css({
								"text-align" : "center"
							});
							container.addChild(output_4, {
								"colIndex": 1,
								"rowIndex": 4,
								"horizontalAlign": "center"
							});
							var output_5 = new cpr.controls.Output();
							output_5.value = "생년월일";
							output_5.style.css({
								"text-align" : "center"
							});
							container.addChild(output_5, {
								"colIndex": 1,
								"rowIndex": 5,
								"horizontalAlign": "center"
							});
							var output_6 = new cpr.controls.Output();
							output_6.value = "이메일";
							output_6.style.css({
								"text-align" : "center"
							});
							container.addChild(output_6, {
								"colIndex": 1,
								"rowIndex": 6,
								"horizontalAlign": "center"
							});
							var output_7 = new cpr.controls.Output();
							output_7.value = "휴대폰 번호";
							output_7.style.css({
								"text-align" : "center"
							});
							container.addChild(output_7, {
								"colIndex": 1,
								"rowIndex": 7,
								"horizontalAlign": "center"
							});
							var inputBox_1 = new cpr.controls.InputBox("ID");
							inputBox_1.readOnly = true;
							inputBox_1.bind("value").toDataMap(app.lookup("member"), "id");
							container.addChild(inputBox_1, {
								"colIndex": 2,
								"rowIndex": 1
							});
							var inputBox_2 = new cpr.controls.InputBox("PASSWORD");
							inputBox_2.secret = true;
							inputBox_2.bind("value").toDataMap(app.lookup("member"), "password");
							container.addChild(inputBox_2, {
								"colIndex": 2,
								"rowIndex": 2
							});
							var inputBox_3 = new cpr.controls.InputBox("ADDR");
							inputBox_3.bind("value").toDataMap(app.lookup("member"), "address");
							container.addChild(inputBox_3, {
								"colIndex": 2,
								"rowIndex": 3
							});
							var inputBox_4 = new cpr.controls.InputBox("NAME");
							inputBox_4.bind("value").toDataMap(app.lookup("member"), "name");
							container.addChild(inputBox_4, {
								"colIndex": 2,
								"rowIndex": 4
							});
							var inputBox_5 = new cpr.controls.InputBox("EMAIL");
							inputBox_5.readOnly = true;
							inputBox_5.bind("value").toDataMap(app.lookup("member"), "email");
							container.addChild(inputBox_5, {
								"colIndex": 2,
								"rowIndex": 6
							});
							var maskEditor_1 = new cpr.controls.MaskEditor("PHONE");
							maskEditor_1.mask = "XXX-XXXX-XXXX";
							maskEditor_1.bind("value").toDataMap(app.lookup("member"), "phone");
							container.addChild(maskEditor_1, {
								"colIndex": 2,
								"rowIndex": 7
							});
							var dateInput_1 = new cpr.controls.DateInput("BIRTH");
							dateInput_1.readOnly = true;
							dateInput_1.bind("value").toDataMap(app.lookup("member"), "birth");
							container.addChild(dateInput_1, {
								"colIndex": 2,
								"rowIndex": 5
							});
							var button_1 = new cpr.controls.Button("Update");
							button_1.value = "수정하기";
							if(typeof onBtn2Click == "function") {
								button_1.addEventListener("click", onBtn2Click);
							}
							container.addChild(button_1, {
								"colIndex": 2,
								"rowIndex": 9
							});
							var button_2 = new cpr.controls.Button("deleteBtn");
							button_2.value = "계정 탈퇴";
							button_2.style.css({
								"color" : "#FF0000"
							});
							if(typeof ondeleteBtnClick == "function") {
								button_2.addEventListener("click", ondeleteBtnClick);
							}
							container.addChild(button_2, {
								"colIndex": 2,
								"rowIndex": 11
							});
						})(group_5);
						container.addChild(group_5, {
							"width": "962px",
							"height": "720px",
							"left": "calc(50% - 481px)",
							"top": "calc(50% - 360px)"
						});
					})(group_4);
					tabItem_1.content = group_4;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					positions: [
						{
							"media": "all and (min-width: 1024px)",
							"right": "7px",
							"bottom": "0px",
							"left": "3px",
							"height": "778px"
						}, 
						{
							"media": "all and (min-width: 500px) and (max-width: 1023px)",
							"right": "3px",
							"bottom": "0px",
							"left": "1px",
							"height": "778px"
						}, 
						{
							"media": "all and (max-width: 499px)",
							"right": "2px",
							"bottom": "0px",
							"left": "1px",
							"height": "778px"
						}
					]
				});
				var userDefinedControl_1 = new udc.logo();
				container.addChild(userDefinedControl_1, {
					positions: [
						{
							"media": "all and (min-width: 1024px)",
							"top": "7px",
							"left": "3px",
							"width": "277px",
							"height": "73px"
						}, 
						{
							"media": "all and (min-width: 500px) and (max-width: 1023px)",
							"top": "7px",
							"left": "1px",
							"width": "135px",
							"height": "73px"
						}, 
						{
							"media": "all and (max-width: 499px)",
							"top": "7px",
							"left": "1px",
							"width": "95px",
							"height": "73px"
						}
					]
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "0px",
				"left": "0px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "mypage2";
	cpr.core.Platform.INSTANCE.register(app);
})();
