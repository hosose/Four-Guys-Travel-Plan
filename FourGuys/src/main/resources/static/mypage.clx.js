/*
 * App URI: mypage
 * Source Location: mypage.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("mypage", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * mypage.js
			 * Created at 2023. 8. 4. 오전 9:40:38.
			 *
			 * @author USER
			 ************************************************/
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				var findMyPage = app.lookup("findMyPage");
				findMyPage.send();
			}

			/*
			 * "수정하기" 버튼(btn2)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtn2Click(e){
				var btn2 = e.control;
				var PASSWORD = app.lookup("PASSWORD");
				var NAME = app.lookup("NAME");
				var ADDR = app.lookup("ADDR");
				var PHONE = app.lookup("PHONE");
				let strengthBadge = app.lookup("password_check");
				if(PASSWORD.value.trim() == "") {
					alert("비밀번호를 입력해주세요");
					PASSWORD.focus();
				}else if(NAME.value.trim() == "") {
					alert("이름을 입력해주세요");
					NAME.focus();
				}else if(ADDR.value.trim() == "") {
					alert("주소을 입력해주세요");
					ADDR.focus();
				}else if(PHONE.value.trim() == "") {
					alert("휴대폰 번호를 입력해주세요");
					PHONE.focus();
				}else if(strengthBadge.value=="Weak"){
					alert("비밀번호를 다시 입력해주세요.");
					PASSWORD.focus();
				}else{
					updateMember();
				}
				
			}
			function updateMember(){
				var submission = app.lookup("updateMember");
				submission.send();
			}

			function StrengthChecker(PasswordParameter) {
				let strengthBadge = app.lookup("password_check");
				let strongPassword = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})');
				let mediumPassword = new RegExp('(?!((?:[A-Za-z]+)|(?:[~!@#$%^&*()_+=]+)|(?:[0-9]+))$)[A-Za-z\d~!@#$%^&*()_+=]{8,}');
				if (strongPassword.test(PasswordParameter)) {
					strengthBadge.style.css("background-color",  "green");
					strengthBadge.style.css("color","white");
					strengthBadge.value="Strong";
					strengthBadge.redraw();
				} else if (mediumPassword.test(PasswordParameter)) {
					strengthBadge.style.css("background-color",  "blue");
					strengthBadge.style.css("color","white");
					strengthBadge.value = 'Medium';
					strengthBadge.redraw();
				} else {
					strengthBadge.style.css("background-color",  "red");
					strengthBadge.style.css("color","white");
					strengthBadge.value = 'Weak';
					strengthBadge.redraw();
			  }
			}
			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onFindMyPageSubmitSuccess(e){
				var findMyPage = e.control;
				var meta = findMyPage.getMetadata("findMyPageis");
				if(meta != null){
					var ID = app.lookup("ID");
					var passwd = app.lookup("PASSWORD");
					var ADDR = app.lookup("ADDR");
					var BIRTH = app.lookup("BIRTH");
					var NAME = app.lookup("NAME");
					var EMAIL = app.lookup("EMAIL");
					var PHONE = app.lookup("PHONE");
					ID.value=meta["id"];
					passwd.value=meta["password"];
					ADDR.value=meta["address"];
					BIRTH.value=meta["birth"];
					EMAIL.value=meta["email"];
					PHONE.value=meta["phone"];
					NAME.value=meta["name"];
				}else{
					location.href="";
				}
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onUpdateMemberSubmitSuccess(e){
				var updateMember = e.control;
				alert("수정되었습니다.");
				location.href="";
			}

			/*
			 * 서브미션에서 submit-error 이벤트 발생 시 호출.
			 * 통신 중 문제가 생기면 발생합니다.
			 */
			function onUpdateMemberSubmitError(e){
				var updateMember = e.control;
				var msg = updateMember.getMetadata("message");
				if (msg != null) {
					alert(msg);
				}
			}

			/*
			 * "계정 탈퇴" 버튼(btn1)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function ondeleteBtnClick(e){
				var deleteBtn = e.control;
				var intro = "탈퇴 하시겠습니까?"
				var initValue = {
					"msg": intro
				}
				app.openDialog("deleteMember", {
					width: 450,
					height: 300
				}, function(dialog) {
					dialog.ready(function(dialogApp) {
						// 필요한 경우, 다이얼로그의 앱이 초기화 된 후, 앱 속성을 전달하십시오.
						dialogApp.initValue = initValue;
					});
				}).then(function(returnValue) {
					alert(JSON.stringify(returnValue));
				});
			}

			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onID(e){
				var iD = e.control;
				alert("아이디는 수정이 불가능 합니다.");
			}

			/*
			 * 데이트 인풋에서 value-change 이벤트 발생 시 호출.
			 * Dateinput의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onBIRTH(e){
				var bIRTH = e.control;
				alert("생일은 수정이 불가능 합니다.");
			}

			/*
			 * 인풋 박스에서 value-change 이벤트 발생 시 호출.
			 * 변경된 value가 저장된 후에 발생하는 이벤트.
			 */
			function onEMAIL(e){
				var eMAIL = e.control;
				alert("이메일은 수정이 불가능 합니다.");
			}

			/*
			 * 인풋 박스에서 blur 이벤트 발생 시 호출.
			 * 컨트롤이 포커스를 잃은 후 발생하는 이벤트.
			 */
			function onPASSWORDBlur(e){
				var pASSWORD = e.control;
				var ipb_password_lookUp = app.lookup("PASSWORD");
				var passwordOutput = app.lookup("password_output");
				let strengthBadge = app.lookup("password_check");
				StrengthChecker(ipb_password_lookUp.value);
				if (ipb_password_lookUp.value.length < 8) {
					alert("비밀번호는 8자이상으로 작성해주세요");
					passwordOutput.value = "비밀번호는 8자이상으로 작성해주세요";
					ipb_password_lookUp.focus();
				}else if(strengthBadge.value=="Weak"){
					passwordOutput.value="1개이상의 특수문자가 필요합니다.";
				} else {
					passwordOutput.value = " ";
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds1");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "PLANNER_NO",
						"dataType": "number"
					},
					{"name": "ID"},
					{
						"name": "PLANNER_TITLE",
						"dataType": "string"
					},
					{
						"name": "PLANNER_START_DATE",
						"dataType": "string"
					},
					{
						"name": "PLANNER_LAST_DATE",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmDetail");
			dataMap_1.parseData({
				"columns" : [
					{"name": "PLAN_TITLE"},
					{"name": "PLAN_START"},
					{"name": "PLAN_LAST"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("member");
			dataMap_2.parseData({
				"alterColumnLayout": "client",
				"columns": [
					{"name": "id"},
					{"name": "password"},
					{
						"name": "name",
						"dataType": "string"
					},
					{"name": "email"},
					{"name": "birth"},
					{"name": "phone"},
					{"name": "address"}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("findMyPage");
			submission_1.method = "get";
			submission_1.action = "findMyPage";
			submission_1.addResponseData(dataMap_2, false);
			if(typeof onFindMyPageSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onFindMyPageSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("updateMember");
			submission_2.method = "put";
			submission_2.action = "/updateMember";
			submission_2.addRequestData(dataMap_2);
			if(typeof onUpdateMemberSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onUpdateMemberSubmitSuccess);
			}
			if(typeof onUpdateMemberSubmitError == "function") {
				submission_2.addEventListener("submit-error", onUpdateMemberSubmitError);
			}
			app.register(submission_2);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var responsiveXYLayout_1 = new cpr.controls.layouts.ResponsiveXYLayout();
			container.setLayout(responsiveXYLayout_1);
			
			// UI Configuration
			var image_1 = new cpr.controls.Image();
			image_1.src = "images/harubang3.jpg";
			container.addChild(image_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (max-width: 499px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}
				]
			});
			
			var group_1 = new cpr.controls.Container("grp1");
			var responsiveXYLayout_2 = new cpr.controls.layouts.ResponsiveXYLayout();
			group_1.setLayout(responsiveXYLayout_2);
			(function(container){
				var userDefinedControl_1 = new udc.logo();
				container.addChild(userDefinedControl_1, {
					positions: [
						{
							"media": "all and (min-width: 1024px)",
							"top": "0px",
							"width": "170px",
							"height": "73px",
							"left": "calc(50% - 85px)"
						}, 
						{
							"media": "all and (min-width: 500px) and (max-width: 1023px)",
							"top": "0px",
							"width": "83px",
							"height": "73px",
							"left": "calc(50% - 41px)"
						}, 
						{
							"media": "all and (max-width: 499px)",
							"top": "0px",
							"width": "58px",
							"height": "73px",
							"left": "calc(50% - 29px)"
						}
					]
				});
				var group_2 = new cpr.controls.Container("grp5");
				group_2.style.css({
					"background-color" : "rgba(255,255,255,0.5)"
				});
				var formLayout_1 = new cpr.controls.layouts.FormLayout();
				formLayout_1.scrollable = false;
				formLayout_1.topMargin = "0px";
				formLayout_1.rightMargin = "0px";
				formLayout_1.bottomMargin = "0px";
				formLayout_1.leftMargin = "0px";
				formLayout_1.horizontalSpacing = "5px";
				formLayout_1.verticalSpacing = "5px";
				formLayout_1.setColumns(["1fr", "100px", "200px", "100px", "1fr"]);
				formLayout_1.setRows(["1fr", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "25px", "40px", "20px", "40px", "1fr"]);
				group_2.setLayout(formLayout_1);
				(function(container){
					var output_1 = new cpr.controls.Output();
					output_1.value = "아이디";
					output_1.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"text-align" : "center"
					});
					container.addChild(output_1, {
						"colIndex": 1,
						"rowIndex": 1,
						"horizontalAlign": "center"
					});
					var output_2 = new cpr.controls.Output();
					output_2.value = "비밀번호";
					output_2.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"text-align" : "center"
					});
					container.addChild(output_2, {
						"colIndex": 1,
						"rowIndex": 3,
						"horizontalAlign": "center"
					});
					var output_3 = new cpr.controls.Output();
					output_3.value = "주소";
					output_3.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"text-align" : "center"
					});
					container.addChild(output_3, {
						"colIndex": 1,
						"rowIndex": 5,
						"horizontalAlign": "center"
					});
					var output_4 = new cpr.controls.Output();
					output_4.value = "이름";
					output_4.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"text-align" : "center"
					});
					container.addChild(output_4, {
						"colIndex": 1,
						"rowIndex": 7,
						"horizontalAlign": "center"
					});
					var output_5 = new cpr.controls.Output();
					output_5.value = "생년월일";
					output_5.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"text-align" : "center"
					});
					container.addChild(output_5, {
						"colIndex": 1,
						"rowIndex": 9,
						"horizontalAlign": "center"
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "이메일";
					output_6.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"text-align" : "center"
					});
					container.addChild(output_6, {
						"colIndex": 1,
						"rowIndex": 11,
						"horizontalAlign": "center"
					});
					var output_7 = new cpr.controls.Output();
					output_7.value = "휴대폰 번호";
					output_7.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"text-align" : "center"
					});
					container.addChild(output_7, {
						"colIndex": 1,
						"rowIndex": 13,
						"horizontalAlign": "center"
					});
					var inputBox_1 = new cpr.controls.InputBox("ID");
					inputBox_1.readOnly = true;
					inputBox_1.style.css({
						"background-color" : "#a3a3a3",
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"background-image" : "none"
					});
					inputBox_1.bind("value").toDataMap(app.lookup("member"), "id");
					if(typeof onID == "function") {
						inputBox_1.addEventListener("click", onID);
					}
					container.addChild(inputBox_1, {
						"colIndex": 2,
						"rowIndex": 1
					});
					var inputBox_2 = new cpr.controls.InputBox("PASSWORD");
					inputBox_2.secret = true;
					inputBox_2.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00"
					});
					inputBox_2.bind("value").toDataMap(app.lookup("member"), "password");
					if(typeof onPASSWORDBlur == "function") {
						inputBox_2.addEventListener("blur", onPASSWORDBlur);
					}
					container.addChild(inputBox_2, {
						"colIndex": 2,
						"rowIndex": 3
					});
					var inputBox_3 = new cpr.controls.InputBox("ADDR");
					inputBox_3.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00"
					});
					inputBox_3.bind("value").toDataMap(app.lookup("member"), "address");
					container.addChild(inputBox_3, {
						"colIndex": 2,
						"rowIndex": 5
					});
					var inputBox_4 = new cpr.controls.InputBox("NAME");
					inputBox_4.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00"
					});
					inputBox_4.bind("value").toDataMap(app.lookup("member"), "name");
					container.addChild(inputBox_4, {
						"colIndex": 2,
						"rowIndex": 7
					});
					var inputBox_5 = new cpr.controls.InputBox("EMAIL");
					inputBox_5.readOnly = true;
					inputBox_5.style.css({
						"background-color" : "#A3A3A3",
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00",
						"background-image" : "none"
					});
					inputBox_5.bind("value").toDataMap(app.lookup("member"), "email");
					if(typeof onEMAIL == "function") {
						inputBox_5.addEventListener("click", onEMAIL);
					}
					container.addChild(inputBox_5, {
						"colIndex": 2,
						"rowIndex": 11
					});
					var maskEditor_1 = new cpr.controls.MaskEditor("PHONE");
					maskEditor_1.mask = "XXX-XXXX-XXXX";
					maskEditor_1.style.css({
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00"
					});
					maskEditor_1.bind("value").toDataMap(app.lookup("member"), "phone");
					container.addChild(maskEditor_1, {
						"colIndex": 2,
						"rowIndex": 13
					});
					var dateInput_1 = new cpr.controls.DateInput("BIRTH");
					dateInput_1.readOnly = true;
					dateInput_1.style.css({
						"background-color" : "#A3A3A3",
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoEB00"
					});
					dateInput_1.bind("value").toDataMap(app.lookup("member"), "birth");
					if(typeof onBIRTH == "function") {
						dateInput_1.addEventListener("click", onBIRTH);
					}
					container.addChild(dateInput_1, {
						"colIndex": 2,
						"rowIndex": 9
					});
					var button_1 = new cpr.controls.Button("Update");
					button_1.value = "수정하기";
					button_1.style.css({
						"background-color" : "#306dc6",
						"border-right-style" : "none",
						"background-repeat" : "no-repeat",
						"text-shadow" : "none",
						"color" : "#FFFFFF",
						"border-left-style" : "none",
						"font-size" : "18px",
						"border-bottom-style" : "none",
						"font-family" : "AppleSDGothicNeoB00",
						"background-image" : "none",
						"border-top-style" : "none"
					});
					if(typeof onBtn2Click == "function") {
						button_1.addEventListener("click", onBtn2Click);
					}
					container.addChild(button_1, {
						"colIndex": 2,
						"rowIndex": 15
					});
					var button_2 = new cpr.controls.Button("deleteBtn");
					button_2.value = "계정 탈퇴";
					button_2.style.css({
						"background-color" : "#FF0000",
						"background-repeat" : "no-repeat",
						"text-shadow" : "none",
						"color" : "#FFFFFF",
						"font-size" : "18px",
						"font-family" : "AppleSDGothicNeoB00",
						"background-image" : "none"
					});
					if(typeof ondeleteBtnClick == "function") {
						button_2.addEventListener("click", ondeleteBtnClick);
					}
					container.addChild(button_2, {
						"colIndex": 2,
						"rowIndex": 17
					});
					var output_8 = new cpr.controls.Output("password_check");
					output_8.style.css({
						"font-family" : "AppleSDGothicNeoM00",
						"text-align" : "center"
					});
					container.addChild(output_8, {
						"colIndex": 3,
						"rowIndex": 3
					});
					var output_9 = new cpr.controls.Output("password_output");
					output_9.style.css({
						"color" : "#FF0000",
						"text-align" : "center"
					});
					container.addChild(output_9, {
						"colIndex": 1,
						"rowIndex": 4,
						"colSpan": 3,
						"rowSpan": 1
					});
					var output_10 = new cpr.controls.Output("addr__output");
					output_10.style.css({
						"color" : "#FF0000",
						"text-align" : "center"
					});
					container.addChild(output_10, {
						"colIndex": 1,
						"rowIndex": 6,
						"colSpan": 3,
						"rowSpan": 1
					});
					var output_11 = new cpr.controls.Output("name__output");
					output_11.style.css({
						"color" : "#FF0000",
						"text-align" : "center"
					});
					container.addChild(output_11, {
						"colIndex": 1,
						"rowIndex": 8,
						"colSpan": 3,
						"rowSpan": 1
					});
					var output_12 = new cpr.controls.Output("phone__output");
					output_12.style.css({
						"color" : "#FF0000",
						"text-align" : "center"
					});
					container.addChild(output_12, {
						"colIndex": 1,
						"rowIndex": 14,
						"colSpan": 3,
						"rowSpan": 1
					});
				})(group_2);
				container.addChild(group_2, {
					positions: [
						{
							"media": "all and (min-width: 1024px)",
							"top": "149px",
							"right": "149px",
							"bottom": "149px",
							"left": "150px"
						}, 
						{
							"media": "all and (min-width: 500px) and (max-width: 1023px)",
							"top": "149px",
							"right": "73px",
							"bottom": "149px",
							"left": "73px"
						}, 
						{
							"media": "all and (max-width: 499px)",
							"top": "149px",
							"right": "51px",
							"bottom": "149px",
							"left": "51px"
						}
					]
				});
				var userDefinedControl_2 = new udc.myPageSideBar();
				container.addChild(userDefinedControl_2, {
					positions: [
						{
							"media": "all and (min-width: 1024px)",
							"top": "0px",
							"bottom": "0px",
							"left": "0px",
							"width": "151px"
						}, 
						{
							"media": "all and (min-width: 500px) and (max-width: 1023px)",
							"top": "0px",
							"bottom": "0px",
							"left": "0px",
							"width": "74px"
						}, 
						{
							"media": "all and (max-width: 499px)",
							"top": "0px",
							"bottom": "0px",
							"left": "0px",
							"width": "52px"
						}
					]
				});
			})(group_1);
			container.addChild(group_1, {
				positions: [
					{
						"media": "all and (min-width: 1024px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (min-width: 500px) and (max-width: 1023px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}, 
					{
						"media": "all and (max-width: 499px)",
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					}
				]
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "mypage";
	cpr.core.Platform.INSTANCE.register(app);
})();
