/*
 * App URI: replyEdit
 * Source Location: replyEdit.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("replyEdit", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * replyEdit.js
			 * Created at 2023. 8. 22. 오전 9:21:26.
			 *
			 * @author USER
			 ************************************************/

			/*
			 * "수정" 버튼(EditBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onEditBtnClick(e){
				var editBtn = e.control;
				var submission = app.lookup("editReplySM");
				submission.send();
			}

			/*
			 * "취소" 버튼(cancelBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onCancelBtnClick(e){
				var cancelBtn = e.control;
				app.close();
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				app.lookup("replyListSM").send();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("boardReply");
			dataSet_1.parseData({
				"columns" : [
					{
						"name": "replyNo",
						"dataType": "number"
					},
					{
						"name": "boardNo",
						"dataType": "number"
					},
					{
						"name": "replyContent",
						"dataType": "string"
					},
					{
						"name": "replyDate",
						"dataType": "string"
					},
					{
						"name": "replyId",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("replyBoardNoDM");
			dataMap_1.parseData({
				"columns" : [{
					"name": "REPLY_NO",
					"dataType": "number"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("plannerBoardNoDM");
			dataMap_2.parseData({
				"columns" : [{
					"name": "BOARD_NO",
					"dataType": "number"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("editReplySM");
			submission_1.method = "put";
			submission_1.action = "editReply";
			submission_1.addRequestData(dataSet_1);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("replyListSM");
			submission_2.method = "get";
			submission_2.action = "findReplyBoardByNo";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var inputBox_1 = new cpr.controls.InputBox("ipb1");
			inputBox_1.bind("value").toDataSet(app.lookup("boardReply"), "replyContent", 0);
			container.addChild(inputBox_1, {
				"top": "20px",
				"left": "20px",
				"width": "633px",
				"height": "172px"
			});
			
			var button_1 = new cpr.controls.Button("EditBtn");
			button_1.value = "수정";
			if(typeof onEditBtnClick == "function") {
				button_1.addEventListener("click", onEditBtnClick);
			}
			container.addChild(button_1, {
				"top": "202px",
				"left": "20px",
				"width": "310px",
				"height": "30px"
			});
			
			var button_2 = new cpr.controls.Button("cancelBtn");
			button_2.value = "취소";
			if(typeof onCancelBtnClick == "function") {
				button_2.addEventListener("click", onCancelBtnClick);
			}
			container.addChild(button_2, {
				"top": "202px",
				"left": "343px",
				"width": "310px",
				"height": "30px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "replyEdit";
	cpr.core.Platform.INSTANCE.register(app);
})();
